<@!585066658918432774> 

cursed clientside generation based on registry 
```java
public class Main implements ModInitializer {
    private static boolean hasGen = false;
    private static class glassData {
        String ign="air";
        String materialName="minecraft:block/air";
        String blockId="AIR_GLASS";
        String tooltag = "pickaxe";
        String surround = "minecraft:air";
        public glassData(Identifier id) {
            this.surround = id.toString();
            this.blockId=(id.getPath()+"_glass").toUpperCase(Locale.ROOT);
            this.materialName = id.getNamespace()+":block/"+id.getPath();
        }
        public glassData(Identifier id, Block block) {
            this(id);
            this.setInGameData(block);
            this.surround = id.toString();
            this.blockId=(id.getPath()+"_glass").toUpperCase(Locale.ROOT);
            this.materialName = id.getNamespace()+":block/"+id.getPath();
        }
        public glassData setInGameData(Block block) {
            String blockName = Language.getInstance().get(block.getTranslationKey());
            this.ign=blockName + " Glass";
            Optional<String> otooltag = block.getDefaultState().streamTags().filter(t -> t.id().getPath().startsWith("mineable")).map(t -> t.id().getPath().split("/")[1]).findFirst();
            tooltag = otooltag.orElseGet(()->"pickaxe");
            return this;
        }
    }
    public static Set<glassData> data = new HashSet<>();
    @Override
    public void onInitialize() {
        ClientTickEvents.START_WORLD_TICK.register((world)->{
            if (!hasGen) {
                Registry.BLOCK.stream().filter(block -> block.getDefaultState().isFullCube(world, BlockPos.ORIGIN)).forEach(block -> {
                    Identifier id = Registry.BLOCK.getId(block);
                    data.add(new glassData(id, block));
                });
                data.forEach(d -> System.out.println(d.blockId + " / " + d.tooltag + " / " + d.ign));
                hasGen=true;
            }
        });

    }

}
```